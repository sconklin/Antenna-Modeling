#!/usr/bin/python
#import sys

#
# Comments
#

def inches(meters):
    return float(meters * 39.3700787)

def meters(inches):
    return float(inches / 39.3700787)

def main():

    topdia = 0.625 # Top element diameter in inches
    botdia = 0.625 # Bottom element diameter in inches
    enddia = 0.625 # End shorting bar diameter inches
    off = 1.0 # offset of top element in inches - .7625 clears boom with 1/4" dia elements, .950 clears with 5/8
    botoff = -1.0 #inches
    drivenlength = 0.95 # meters
    freq_low = 136
    freq_high = 152
    scale = 1.0

    # #nd of configurables

    end_L = "%1.5f" % (drivenlength/2)
    offset = "%1.5f" %  meters(off)
    top_DIA =  "%1.5f" %  meters(topdia / 2)
    bot_DIA =  "%1.5f" %  meters(botdia / 2)
    end_DIA =  "%1.5f" %  meters(enddia / 2)

    refl_hl = "%1.5f" % (0.502000 * scale)
    d1_hl =   "%1.5f" % (0.468000 * scale)
    d2_hl =   "%1.5f" % (0.437000 * scale)
    d3_hl =   "%1.5f" % (0.447000 * scale)
    d4_hl =   "%1.5f" % (0.434000 * scale)

    freq_steps = "%d" % ((freq_high - freq_low) * 10)
    freq_l = "%1.5f" % (freq_low)

    print ("CM Generated by a python script")
    print ("CM ON6MU antenna design")
    print ("CM Adjusted manually by scaling to get a center f of 145MHz")
    print ("CM Thicker driven element to flatten SWR")
    print ("CM Crossed elements offset by 20mm in X dimension")
    print ("CE End Comments")

    print ("GW     1    25  0.00000E+00  %s  0.00000E+00  0.00000E+00 -%s  0.00000E+00  3.17500E-03" % (refl_hl, refl_hl))

    print ("GW     2    25  3.98000E-01  -%s   %s  3.98000E-01  %s   %s  %s" % (end_L, offset, end_L, offset, top_DIA))
    print ("GW     3    25  3.98000E-01  -%s  -%s  3.98000E-01  %s  -%s  %s" % (end_L, offset, end_L, offset, top_DIA))
    print ("GW     4     5  3.98000E-01  -%s   %s  3.98000E-01 -%s  -%s  %s" % (end_L, offset, end_L, offset, end_DIA))
    print ("GW     5     5  3.98000E-01   %s   %s  3.98000E-01  %s  -%s  %s" % (end_L, offset, end_L, offset, end_DIA))

    print ("GW     6    25  5.68000E-01  %s  0.00000E+00  5.68000E-01 -%s  0.00000E+00  3.17500E-03" % (d1_hl, d1_hl))
    print ("GW     7    25  8.16000E-01  %s  0.00000E+00  8.16000E-01 -%s  0.00000E+00  3.17500E-03" % (d2_hl, d2_hl))
    print ("GW     8    25  1.12500E+00  %s  0.00000E+00  1.12500E+00 -%s  0.00000E+00  3.17500E-03" % (d3_hl, d3_hl))
    print ("GW     9    25  1.62700E+00  %s  0.00000E+00  1.62700E+00 -%s  0.00000E+00  3.17500E-03" % (d4_hl, d4_hl))

    print ("GW    10    25  5.17000E-01  0.00000E+00  %s  5.17000E-01  0.00000E+00 -%s  3.17500E-03" % (refl_hl, refl_hl))

    print ("GW    11    25  9.15000E-01   %s  -%s  9.15000E-01  %s   %s %s" % (offset, end_L, offset, end_L, bot_DIA))
    print ("GW    12    25  9.15000E-01  -%s  -%s  9.15000E-01 -%s   %s %s" % (offset, end_L, offset, end_L, bot_DIA))
    print ("GW    13     5  9.15000E-01   %s  -%s  9.15000E-01 -%s  -%s %s" % (offset, end_L, offset, end_L, bot_DIA))
    print ("GW    14     5  9.15000E-01   %s  %s0  9.15000E-01 -%s   %s %s" % (offset, end_L, offset, end_L, bot_DIA))
    print ("GW    15    25  1.08500E+00  0.00000E+00  %s  1.08500E+00  0.00000E+00 -%s  3.17500E-03" % (d1_hl, d1_hl))
    print ("GW    16    25  1.33300E+00  0.00000E+00  %s  1.33300E+00  0.00000E+00 -%s  3.17500E-03" % (d2_hl, d2_hl))
    print ("GW    17    25  1.64200E+00  0.00000E+00  %s  1.64200E+00  0.00000E+00 -%s  3.17500E-03" % (d3_hl, d3_hl))
    print ("GW    18    25  2.14400E+00  0.00000E+00  %s  2.14400E+00  0.00000E+00 -%s  3.17500E-03" % (d4_hl, d4_hl))
    print ("GM     0     0  0.00000E+00  0.00000E+00  0.00000E+00 0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00")
    print ("GE     0     0  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00")
    print ("FR     0    %s     0      0  %s  1.00000E-01  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00" % (freq_steps, freq_l))
    print ("EX     0     2    13      0  1.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00")
    print ("EX     0    11    13      0  1.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00")
    print ("LD     5     0     0      0  3.70000E+07  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00")
    print ("NH     0     0     0      0  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00")
    print ("NE     0    20    15      1 -1.40000E+00 -1.40000E+00  5.00000E-02  2.00000E-01  2.00000E-01  0.00000E+00")
    print ("RP     0    37    73   1000  0.00000E+00  0.00000E+00  5.00000E+00  5.00000E+00  0.00000E+00  0.00000E+00")
    print ("EN     0     0     0      0  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00  0.00000E+00")

    return

main()

# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4
